version: '3.9'

services:

  postgres:
    image: postgres:13.0-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data_todolist:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - backend_nw

  api:
    image: ${DOCKERHUB_USERNAME}/django-project:main
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend_nw
      - frontend_nw

  bot:
    image: ${DOCKERHUB_USERNAME}/django-project:main
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend_nw

  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - frontend_nw

volumes:
  pg_data_todolist:

networks:
  backend_nw:
    driver: bridge
  frontend_nw:
    driver: bridge

